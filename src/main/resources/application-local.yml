custom:
  rabbit-mq:
    queue: email-registration
  email:
    url: http://localhost:9000
  security:
    clientId: admin
    clientSecret: password
    oauth2Url: http://localhost:8070

spring:
  # RabbitMQ
  rabbitmq:
    host: localhost
    username: guest
    password: guest
    port: 5672
    virtual-host: /
    enabled: false
  # PostgreSQL
  datasource:
    port: 5432
    schema: qa_shopee
    hikari:
      connectionTimeout: 20000
      maximum-pool-size: 5
    url: jdbc:postgresql://localhost:${spring.datasource.port}/postgres?currentSchema=${spring.datasource.schema}
    username: postgres
    password: postgres
  # Flyway
  flyway:
    url: jdbc:postgresql://localhost:${spring.datasource.port}/postgres
    schemas: ${spring.datasource.schema}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    enabled: true
    validate-migration-naming: false
  # Security
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${custom.security.oauth2Url}
  jpa:
    open-in-view: false
    show-sql: true
#    hibernate:
#      ddl-auto: create
  cloud:
    discovery:
      enabled: false
#    function:
#      definition: updateCommunication
#    stream:
#      bindings:
#        updateCommunication-in-0:
#          destination: communication-sent
#          group: ${spring.application.name}
#        sendCommunication-out-0:
#          destination: send-communication

# Eureka
eureka:
  preferIdAddress: false
  client:
    fetchRegistry: false
    registerWithEureka: false
    serviceUrl:
      defaultZone: http://localhost:8072/eureka/
  instance:
    preferIpAddress: false

#Spring doc
springdoc:
  swagger-ui:
    enabled: true
    path: /swagger-ui.html

#MyBatis
mybatis:
  mapper-locations: classpath:batis/*.xml
  type-aliases-package: com.shopee.shopeebeadmindemo.mybatis
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

#Config Eureka
management:
  enabled: false
  endpoints:
    web:
      exposure:
        exclude: '*'
  enabled-by-default: false
  health:
    readiness-state:
      enabled: false
    liveness-state:
      enabled: false
  endpoint:
    health:
      probes:
        enabled: false
    shutdown:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}